[build-system]
build-backend = "hatchling.build"

requires = [ "hatchling" ]

[project]
name = "stacklet-mcp"
description = "MCP server for the Stacklet environment"
requires-python = ">=3.12"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dynamic = [ "version" ]

dependencies = [
  "fastmcp>=2",
  "graphql-core>=3.2",
  "httpx>=0.28.1",
  "pydantic>=2.11.7",
  "pydantic-settings>=2.10.1",
]
scripts.stacklet-mcp = "stacklet.mcp.mcp:main"

[dependency-groups]
dev = [
  "add-license-header>=2.4",
  "mypy>=1.8",
  "pre-commit>=4.2",
  "pyproject-fmt>=2.6",
  "pytest>=7",
  "pytest-asyncio>=0.21",
  "pytest-cov>=7",
  "ruff>=0.12",
]

[tool.hatch.version]
path = "stacklet/mcp/__init__.py"

[tool.hatch.build.targets.wheel]
packages = [ "stacklet" ]

[tool.ruff]
line-length = 100

# Add `line-too-long` and isort to the enforced rule set.
lint.extend-select = [ "E501", "I" ]
lint.isort.lines-after-imports = 2
# Use a single line between direct and from import.
lint.isort.lines-between-types = 1

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "--no-cov-on-fail"

[tool.coverage.report]
fail_under = 94.0
show_missing = true
skip_covered = true

[tool.mypy]
strict = true
install_types = true
warn_return_any = true
warn_unused_configs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
ignore_missing_imports = true
non_interactive = true
exclude = [ "tests/" ]
plugins = [ "pydantic.mypy" ]
